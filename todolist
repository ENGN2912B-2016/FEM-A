detailed plans to DO BY

*************************************************************
Nov 30 Weds  #2
*************************************************************
[finish setup, get 1D components working]

-[all] share all new files
-[] make a final main/header file with list of all functions etc
-[] organize github repository
-[x] decide if it is easier to use branches as backups and master as working directory
-[] make sure everyone can compile/run on ccv






*************************************************************
Dec 2 Fri #3
*************************************************************
[get 1D  fully working, all parts run together on ccv]

-[x] get Qt to work with code (creates input file)
-[x] write FEM solver for 1D
-[x] make function to calculate convergence and/or accuracy 1D (bugs with implict methods)
-[x] function to reformat output for plotting(modify the output file)
-[x] make code to do automatic visualization in ccv (vtk/gnuplot/matlab?)(call from main function )
-[x]] make default input file generator 1D
    -[] start with evenly spaced 1D mesh
    -[] include default values for mesh spacing, time step, start value, algorithm, function
-[x] make input file reader 1D for Qt and the code
-[x] make output file generator 1D
-[x] get Qt to work in ccv (for now use vnc)
    -[x] get Qt to write input to a file

-[x] reorganize repository...






&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Dec4 Sun &&&  UPDATE REPORT 2 DUE &&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

-[x] finish and verify all 1D algorithms work properly
-[all] write updates for UPDATE 2
-[] put updates together, proofread, submit
-[] modify printoutput() to print proper format








*************************************************************
Dec 6 Tues #4
*************************************************************
[make 2D versions of everything]

-[yunxing] write 2D euler
-[yunxing] write 2d backward euler
-[yunxing] write 2d crank nicholson
-[yunxing] write 2d DuFort_Frankel
-[zhi] 2d fem
-[helena] write 2d convergence/stability checker
-[zhi] add multithreads to 1D stability check
-[yunxing] Qt allows 2D support(JUST add y)
-[helena] make automatic visualization to plot in 2D()

meeting 4:30 at bh lobby


*************************************************************
Dec 8 Thur #5
*************************************************************
[make 2D versions of everything]

-[] verify all 2D parts work on ccv
-[] add 2D defaults for algorithms, input, mesh
-[] add built-in test cases for 2D
-[] fix loose ends
-[] write updates (check if there is an UPDATE REPORT #3)
-[] put updates together, proofread, submit








&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Dec 12 Mon &&&  FINAL CODE DUE &&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
[make sure all working/required code is on github master branch]

//////////////////// if there's extra time

// more boundary conditions
// more solver algorithms
// 3d versions of everything
// rewrite everything to be "good programming practice" (templates, functions that handle both 1D and 3D)
// nonlinear time discretization
// compare many sample cases with matlab or other program







*************************************************************
Dec 15 Thu #
*************************************************************
[start/finish final report]

-[] describe each function (input/output, purpose, dependencies, etc)
-[] write complete installation/setup instructions to get the code to work on ccv
    -[] include troubleshooting/special notes, required version numbers
-[] write step-by-step guide to using the program
    -[] describe options, possible choices
-[] write how code handles bad input, errors, exceptions, etc
-[] make list of tasks and problems encountered each week
-[] combine above parts with proposal
-[] proofread
-[] submit







&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
Dec 19 Mon &&&  FINAL REPORT DUE &&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
